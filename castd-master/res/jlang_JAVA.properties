#headers
INCLUDE = import $;\n
INCLUDE2=
DEFINE = public static final String $ = #

#classes
CLASS = class 
ENUM = enum 
RECORD = class 
STRUCT_TEMPLATE = $<#>
STRUCT_TEMPLATE2=

#membership
MEMBER_ACCESS=$.#

#primitive types
INT_TYPE = int 
INT_OBJECT_TYPE = Integer 
BOOLEAN_TYPE = boolean
DOUBLE_TYPE = double 
DOUBLE_OBJECT_TYPE = Double 
FLOAT_TYPE = float 
FLOAT_OBJECT_TYPE = Float 
CHAR_TYPE = char 
CHAR_OBJECT_TYPE = Character 
STRING_TYPE = String 
CONST = final 
AUTO_TYPE =
CHAR_PTR2 = String[]
CONST_CHAR_PTR2 = final String[] 
VECTOR_TYPE = Vector
SET_TYPE = Set 
MAP_TYPE = Map
ENTRY_TYPE = Entry
REGEX_TYPE = String 
MATCH_TYPE = Matcher 
UNKNOW_TYPE = T

# I/O
OUTPUT = System.out.println
INPUT = System.in
READ_LINE = # = new Scanner($).nextLine()
OUTPUT_PIPE =
INPUT_PIPE = 
MAIN_ARG_1 = args
MAIN_ARG_2 =

# conditions
EQUALS =  == 
NOT_EQUALS =  != 
AND =  && 
OR =  || 
NOT = !
IN = $.contains(#)
COMPARE= $.compareTo(#)
TRUE = true
FALSE = false
CONTINUE=continue;

# statements
IF = if($)
ELSE = else
FOR = for($; #; %)
FOR2=for($ # : %)
WHILE = while ($)
ASSIGN =  = 

# returns
RETURN_ANY=return $
EMPTY_RETURN = void 
NIL = null

#calls , references
CONTAINER_TEMPLATE = <$>
ACCESS_ELEM_VECT = $.get(#)
ACCESS_ELEM_VECT2 =
LAMBDA_CAPTURE =
ENUMERATE = {$};
ADD_ELEM_VECT = $.add(#)
ADD_ELEM_MAP = $.put(#, %)
REGEX_MATCH = (% = Pattern.compile(#).matcher($)) != null && %.find()
STR_MATCH = $.group(#)
STR_INT = Integer.parseInt($)
STR_DOUBLE = Double.parseDouble($)
STR_FLOAT = Float.parseFloat($)
STRINGIFY=JSON.stringify($)

#main signature
MAIN_FUNCTION = public static void main(String[] args)
EVENT = Event<$>
CONFIG_INPUT_STREAM=configInputString(args)
READ_EVENT = read_event(args)

#symboles
SHARED_PTR =
PTR =
POINT_TO = .
BRA_BEGIN = {\n
BRA_END = }
SEMI_COLON_SEP = ;\n
COLON_SEP =  : 
COMMA_SEP = , 
COMMA_NEWLINE = ,\n
NEWLINE = \n
PAR_BEGIN = (
PAR_END = )
STRING_QUOTE = "$"
INDENT =   
SEP =  
